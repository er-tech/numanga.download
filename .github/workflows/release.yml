name: Publish apps

on:
  repository_dispatch:
  workflow_dispatch: 

permissions:
  contents: write
  id-token: write
  deployments: write

jobs:
  create-release:
    name: Create new release
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.set-version.outputs.PACKAGE_VERSION }}

    steps:
      - name: Check out numanga.app repo
        uses: actions/checkout@v4
        with:
          repository: er-tech/numanga.app
          ref: main
          token: ${{ secrets.PAT }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Get version from package.json
        id: set-version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGE_VERSION: ${{ steps.set-version.outputs.PACKAGE_VERSION }}
        with:
          tag_name: ${{ env.PACKAGE_VERSION }}
          release_name: Release ${{ env.PACKAGE_VERSION }}
          body_path: CHANGELOG.md
          draft: true
          prerelease: false

  release-electron:
    name: Release Electron apps
    needs: create-release
    permissions:
      contents: write
    env:
      PACKAGE_VERSION: ${{ needs.create-release.outputs.PACKAGE_VERSION }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN : ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: 'macos-latest'
          - platform: 'ubuntu-22.04'
          - platform: 'windows-latest'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out numanga.app repo
        uses: actions/checkout@v4
        with:
          repository: er-tech/numanga.app
          ref: main
          token: ${{ secrets.PAT }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Build and release Electron App
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ env.PACKAGE_VERSION }}
          build_script_name: preapp:build

  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [create-release, release-electron]
    env:
      PACKAGE_VERSION: ${{ needs.create-release.outputs.PACKAGE_VERSION }}

    steps:
      - name: Publish Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release edit "${{ env.PACKAGE_VERSION }}" --draft=false

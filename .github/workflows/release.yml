name: Publish apps

on:
  repository_dispatch:
  workflow_dispatch: 

permissions:
  contents: write
  id-token: write
  deployments: write

jobs:
  create-release:
    name: Create new release
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.set-version.outputs.PACKAGE_VERSION }}

    steps:
      - name: Check out numanga.app repo
        uses: actions/checkout@v4
        with:
          repository: er-tech/numanga.app
          ref: main
          token: ${{ secrets.PAT }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Get version from package.json
        id: set-version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGE_VERSION: ${{ steps.set-version.outputs.PACKAGE_VERSION }}
        with:
          tag_name: ${{ env.PACKAGE_VERSION }}
          release_name: Release ${{ env.PACKAGE_VERSION }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

  release-electron:
    name: Release Electron apps
    needs: create-release
    permissions:
      contents: write
    env:
      PACKAGE_VERSION: ${{ needs.create-release.outputs.PACKAGE_VERSION }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: 'macos-latest'
          - platform: 'ubuntu-22.04'
          - platform: 'windows-latest'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out numanga.app repo
        uses: actions/checkout@v4
        with:
          repository: er-tech/numanga.app
          ref: main
          token: ${{ secrets.PAT }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Build Electron Apps
        run: npm run app:build
      
      - name: View results
        run: ls release

      #   if: matrix.platform == 'ubuntu-22.04'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      # - name: Upload binaries to release
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: release/mything
      #     asset_name: mything
      #     tag: ${{ github.ref }}
      #     overwrite: true
      #     body: "This is my release text"
      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       Release.txt
      #       LICENSE